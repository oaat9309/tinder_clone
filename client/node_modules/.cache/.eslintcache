[{"/Users/cypark/Desktop/My Work/tinder-clone/src/index.js":"1","/Users/cypark/Desktop/My Work/tinder-clone/src/App.js":"2","/Users/cypark/Desktop/My Work/tinder-clone/src/pages/OnBoarding.js":"3","/Users/cypark/Desktop/My Work/tinder-clone/src/pages/Home.js":"4","/Users/cypark/Desktop/My Work/tinder-clone/src/pages/Dashboard.js":"5","/Users/cypark/Desktop/My Work/tinder-clone/src/components/Nav/Nav.js":"6","/Users/cypark/Desktop/My Work/tinder-clone/src/components/AuthModal/AuthModal.js":"7","/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatContainer/ChatContainer.js":"8","/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatHeader/ChatHeader.js":"9","/Users/cypark/Desktop/My Work/tinder-clone/src/components/MatchesDisplay/MatchesDisplay.js":"10","/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatDisplay/ChatDisplay.js":"11","/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatInput/ChatInput.js":"12","/Users/cypark/Desktop/My Work/tinder-clone/src/components/Chat/Chat.js":"13"},{"size":219,"mtime":1646466074757,"results":"14","hashOfConfig":"15"},{"size":486,"mtime":1646466116074,"results":"16","hashOfConfig":"15"},{"size":5645,"mtime":1646999586467,"results":"17","hashOfConfig":"15"},{"size":914,"mtime":1646802185297,"results":"18","hashOfConfig":"15"},{"size":1804,"mtime":1647132763659,"results":"19","hashOfConfig":"15"},{"size":529,"mtime":1646824275166,"results":"20","hashOfConfig":"15"},{"size":2061,"mtime":1646799359347,"results":"21","hashOfConfig":"15"},{"size":556,"mtime":1647139581915,"results":"22","hashOfConfig":"15"},{"size":421,"mtime":1647133521151,"results":"23","hashOfConfig":"15"},{"size":166,"mtime":1647134581614,"results":"24","hashOfConfig":"15"},{"size":255,"mtime":1647134442223,"results":"25","hashOfConfig":"15"},{"size":428,"mtime":1647175659092,"results":"26","hashOfConfig":"15"},{"size":136,"mtime":1647175138448,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"gkh89x",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cypark/Desktop/My Work/tinder-clone/src/index.js",[],[],["69","70"],"/Users/cypark/Desktop/My Work/tinder-clone/src/App.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/pages/OnBoarding.js",["71"],[],"import { useState } from \"react\";\nimport Nav from \"../components/Nav/Nav\";\n\nconst Onboarding = () => {\n  const [formData, setFormData] = useState({\n    user_id: \"\",\n    first_name: \"\",\n    dob_day: \"\",\n    dob_month: \"\",\n    dob_year: \"\",\n    show_gender: false,\n    gender_identity: \"man\",\n    gender_interest: \"woman\",\n    email: \"\",\n    url: \"\",\n    about: \"\",\n    matches: [],\n  });\n  const handleSubmit = () => {};\n  const handleChange = (e) => {\n    console.log(e);\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    const name = e.target.name;\n    console.log(value, name);\n\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <Nav setShowModal={() => {}} showModal={false} />\n      <div className=\"onboarding\">\n        <h2>Create Account</h2>\n        <form onSubmit={handleSubmit}>\n          <section>\n            {/* name은 DB에 들어간 이름이랑 맞춰줘야 함! */}\n            <label htmlFor=\"first_name\">First Name</label>\n            <input\n              id=\"first_name\"\n              type=\"text\"\n              name=\"first_name\"\n              placeholder=\"First Name\"\n              required={true}\n              value={formData.first_name}\n              onChange={handleChange}\n            />\n            <label>Birthday</label>\n            <div className=\"multiple-input-container\">\n              <input\n                id=\"dob_day\"\n                type=\"number\"\n                name=\"dob_day\"\n                placeholder=\"DD\"\n                required={true}\n                value={formData.dob_day}\n                onChange={handleChange}\n              />\n              <input\n                id=\"dob_month\"\n                type=\"number\"\n                name=\"dob_month\"\n                placeholder=\"MM\"\n                required={true}\n                value={formData.dob_month}\n                onChange={handleChange}\n              />\n              <input\n                id=\"dob_year\"\n                type=\"number\"\n                name=\"dob_year\"\n                placeholder=\"YYYY\"\n                required={true}\n                value={formData.dob_year}\n                onChange={handleChange}\n              />\n            </div>\n\n            <label>Gender</label>\n            <div className=\"multiple-input-container\">\n              <input\n                id=\"man-gender-identity\"\n                type=\"radio\"\n                name=\"gender_identity\"\n                value=\"man\"\n                onChange={handleChange}\n                checked={formData.gender_identity === \"man\"}\n              />\n              <label htmlFor=\"man-gender-identity\">Men</label>\n              <input\n                id=\"woman-gender-identity\"\n                type=\"radio\"\n                name=\"gender_identity\"\n                value=\"woman\"\n                onChange={handleChange}\n                checked={formData.gender_identity === \"woman\"}\n              />\n              <label htmlFor=\"woman-gender-identity\">Women</label>\n              <input\n                id=\"more-gender-identity\"\n                type=\"radio\"\n                name=\"gender_identity\"\n                value=\"more\"\n                onChange={handleChange}\n                checked={formData.gender_identity === \"more\"}\n              />\n              <label htmlFor=\"more-gender-identity\">More</label>\n            </div>\n            <label htmlFor=\"show-gender\">Show gender on my profile</label>\n            <input\n              id=\"show-gender\"\n              type=\"checkbox\"\n              name=\"show_gender\"\n              onChange={handleChange}\n            />\n            <label>Show Me</label>\n            <div className=\"multiple-input-container\">\n              <input\n                id=\"man-gender-interest\"\n                type=\"radio\"\n                name=\"gender_interest\"\n                value=\"man\"\n                onChange={handleChange}\n                checked={formData.gender_interest === \"man\"}\n              />\n              <label htmlFor=\"man-gender-interest\">Men</label>\n              <input\n                id=\"woman-gender-interest\"\n                type=\"radio\"\n                name=\"gender_interest\"\n                value=\"woman\"\n                onChange={handleChange}\n                checked={formData.gender_interest === \"woman\"}\n              />\n              <label htmlFor=\"woman-gender-interest\">Women</label>\n              <input\n                id=\"everyone-gender-interest\"\n                type=\"radio\"\n                name=\"gender_interest\"\n                value=\"everyone\"\n                onChange={handleChange}\n                checked={formData.gender_interest === \"everyone\"}\n              />\n              <label htmlFor=\"everyone-gender-interest\">Everyone</label>\n            </div>\n            <label htmlFor=\"about\">About Me</label>\n            <input\n              id=\"about\"\n              type=\"text\"\n              name=\"about\"\n              required={true}\n              placeholder=\"I like dogs...\"\n              value={formData.about}\n              onChange={handleChange}\n            />\n            <input type=\"submit\" />\n          </section>\n          <section>\n            <label htmlFor=\"url\">Profile Photo</label>\n            <input\n              type=\"url\"\n              name=\"url\"\n              id=\"url\"\n              onChange={handleChange}\n              required={true}\n            />\n            <div className=\"photo-container\">\n              <img src={formData.url} alt=\"profile photo\" />\n            </div>\n          </section>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Onboarding;\n","/Users/cypark/Desktop/My Work/tinder-clone/src/pages/Home.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/pages/Dashboard.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/Nav/Nav.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/AuthModal/AuthModal.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatContainer/ChatContainer.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatHeader/ChatHeader.js",["72"],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/MatchesDisplay/MatchesDisplay.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatDisplay/ChatDisplay.js",["73"],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/ChatInput/ChatInput.js",[],[],"/Users/cypark/Desktop/My Work/tinder-clone/src/components/Chat/Chat.js",[],[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":171,"column":15,"nodeType":"80","endLine":171,"endColumn":61},{"ruleId":"81","severity":1,"message":"82","line":9,"column":11,"nodeType":"80","endLine":9,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":1,"column":8,"nodeType":"85","messageId":"86","endLine":1,"endColumn":14},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]